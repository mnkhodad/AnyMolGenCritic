Seed set to 666
Importing numpy...
Importing rdkit...
Importing random...
Importing torch...
Importing copy2...
test...
5alas...
Warning: Note that for both training and metrics, results will only be reproducible when using the same number of GPUs and num_samples/sample_batch_size
Loaded the vocabulary
dataset len 1332 train len 798 val len 267 test len 267
['Fc1ncccc1-c1cc(ccc1)[C@]1([NH+]=C(N2C1=NCCC2)N)c1cc2OCCOc2cc1', 'Clc1ccccc1-c1n(Cc2nc(N)ccc2)c(cc1)-c1ccc(Oc2cncnc2)cc1', 'S(=O)(=O)(N(C)c1cc2cc(c1)C(=O)NCCC\\C=C\\COCC(NC2=O)C(O)C[NH2+]Cc1cc(ccc1)C(C)C)C']
[[0.   3.91 4.85]
 [1.   2.62 4.29]
 [0.   5.65 4.99]]
[[ 0.         -0.03288438  0.74592348]
 [ 1.         -1.6603765  -0.38376874]
 [ 0.          2.16233755  1.02834653]]
dataset len 1332 train len 798 val len 267 test len 267
['S1(=O)(=O)N(CCCC1)c1cc(cc(c1)/C(=N\\OCCC)/C)C(=O)NC([C@@H](O)C[NH2+]Cc1cc(OC)ccc1)Cc1cc(F)cc(F)c1', 'Fc1cc(cc(F)c1)CC(NC(=O)c1c2cc(ccc2n(c1)C(=O)N(CCCC)C)C(F)(F)F)C(O)C[NH2+]Cc1cc(OC)ccc1', 'Fc1cc(cc(F)c1)CC(NC(=O)C(N1CCC(CC(C)C)C1=O)CCc1ccccc1)C(O)C[NH2+]Cc1cc(OC)ccc1']
[[1.   4.3  5.  ]
 [0.   4.19 4.94]
 [1.   4.41 4.74]]
[[1.         0.45914812 1.04851961]
 [0.         0.32036973 0.92748116]
 [1.         0.59792652 0.52401965]]
dataset len 1332 train len 798 val len 267 test len 267
['S(=O)(=O)(N(C)c1cc(cc(c1)COCC([NH3+])(Cc1ccccc1)CF)C(=O)NC(C)c1ccc(F)cc1)C', 'O(C)c1ccc(cc1)Cc1cc(ccc1)[C@]1([NH+]=C(N2C1=NCCC2)N)c1ccccc1', 'Clc1cc2CC(N=C(NC(Cc3cscc3C#C)C(=O)[O-])c2cc1)(C)C']
[[0.   3.73 4.45]
 [0.   3.55 4.04]
 [0.   4.03 4.16]]
[[ 0.         -0.2599763  -0.06099954]
 [ 0.         -0.48706823 -0.88809563]
 [ 0.          0.11851024 -0.64601872]]
Atom vocabulary size: 16
['Br', 'C', 'CH', 'Cl', 'F', 'I', 'N', 'N+', 'N-', 'NH', 'NH+', 'NH2+', 'NH3+', 'O', 'O-', 'S']
Valences from train + val
{'F': 1, 'C': 4, 'N': 3, 'NH+': 3, 'O': 2, 'Cl': 1, 'S': 6, 'NH2+': 2, 'Br': 1, 'O-': 1, 'CH': 3, 'NH': 2, 'NH3+': 1, 'N+': 4, 'N-': 2, 'I': 1}
Valences from train + val + test
{'F': 1, 'C': 4, 'N': 3, 'NH+': 3, 'O': 2, 'Cl': 1, 'S': 6, 'NH2+': 2, 'Br': 1, 'O-': 1, 'CH': 3, 'NH': 2, 'NH3+': 1, 'N+': 4, 'N-': 2, 'I': 1}
[3.93606516 4.4802381 ]
[0.62826321 0.24572864]
--Atom vocabulary size--: 16
['Br', 'C', 'CH', 'Cl', 'F', 'I', 'N', 'N+', 'N-', 'NH', 'NH+', 'NH2+', 'NH3+', 'O', 'O-', 'S']
embedding:
tensor([[[-0.7747,  0.7926, -0.0062,  ...,  1.0079, -1.2261,  0.2630],
         [ 1.4338,  0.5121,  1.9476,  ...,  1.7935, -0.5634, -0.3238],
         [-0.2560,  0.1753, -1.2384,  ..., -0.6328, -1.3085,  0.6847],
         ...,
         [-0.8279, -0.9443, -0.6694,  ..., -0.6183, -1.9825,  1.1151],
         [ 1.3023, -0.7703,  0.0170,  ...,  0.0864,  0.5489,  0.2208],
         [ 0.0148, -0.8460,  0.7663,  ..., -0.9820,  1.1806,  1.4605]]])
MYRMQLLSCIALSLALVTNSAPTSSSTKKTQLQLEHLLLDLQMILNGINNYKNPKLTRMLTFKFYMPKKATELKHLQCLEEELKPLEEVLNLAQSKNFHLRPRDLISNINVIVLELKGSETTFMCEYADETATIVEFLNRWITFCQSIISTLQ
SUCESSSSSSSSSSSSSSSS
[neptune] [info   ] Neptune initialized. Open in the app: https://app.neptune.ai/samsung/AutoregressiveMolecules/e/AUT-5638
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
Seed set to 666
/data/venv/lib/python3.10/site-packages/lightning/pytorch/callbacks/model_checkpoint.py:654: Checkpoint directory /data/stggnew/src/exp_bace55epoch exists and is not empty.
Restoring states from the checkpoint path at /data/stggnew/src/exp_bace55epoch/last.ckpt
Traceback (most recent call last):
  File "/data/stggnew/src/train.py", line 991, in <module>
    trainer.fit(model,
  File "/data/venv/lib/python3.10/site-packages/lightning/pytorch/trainer/trainer.py", line 561, in fit
    call._call_and_handle_interrupt(
  File "/data/venv/lib/python3.10/site-packages/lightning/pytorch/trainer/call.py", line 48, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/data/venv/lib/python3.10/site-packages/lightning/pytorch/trainer/trainer.py", line 599, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/data/venv/lib/python3.10/site-packages/lightning/pytorch/trainer/trainer.py", line 981, in _run
    self._checkpoint_connector._restore_modules_and_callbacks(ckpt_path)
  File "/data/venv/lib/python3.10/site-packages/lightning/pytorch/trainer/connectors/checkpoint_connector.py", line 409, in _restore_modules_and_callbacks
    self.restore_model()
  File "/data/venv/lib/python3.10/site-packages/lightning/pytorch/trainer/connectors/checkpoint_connector.py", line 286, in restore_model
    self.trainer.strategy.load_model_state_dict(
  File "/data/venv/lib/python3.10/site-packages/lightning/pytorch/strategies/strategy.py", line 372, in load_model_state_dict
    self.lightning_module.load_state_dict(checkpoint["state_dict"], strict=strict)
  File "/data/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 2189, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for CondGeneratorLightningModule:
	Unexpected key(s) in state_dict: "protein_proj.weight", "protein_proj.bias". 
[neptune] [info   ] Shutting down background jobs, please wait a moment...
[neptune] [warning] Warning: string series 'monitoring/f084c4fc/stderr' value was longer than 1000 characters and was truncated. This warning is printed only once per series.
[neptune] [info   ] Done!
[neptune] [info   ] Waiting for the remaining 88 operations to synchronize with Neptune. Do not kill this process.
[neptune] [info   ] All 88 operations synced, thanks for waiting!
[neptune] [info   ] Explore the metadata in the Neptune app: https://app.neptune.ai/samsung/AutoregressiveMolecules/e/AUT-5638/metadata
